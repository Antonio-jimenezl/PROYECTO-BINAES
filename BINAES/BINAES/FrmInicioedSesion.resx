<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgwAAABGCAYAAACg2swsAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAS5JREFUeF7t1sEAACAUQLHoAovp+5VBT2CHOWztMxcA4EcYAIAkDABAEgYAIAkD
        AJCEAQBIwgAAJGEAAJIwAABJGACAJAwAQBIGACAJAwCQhAEASMIAACRhAACSMAAASRgAgCQMAEASBgAg
        CQMAkIQBAEjCAAAkYQAAkjAAAEkYAIAkDABAEgYAIAkDAJCEAQBIwgAAJGEAAJIwAABJGACAJAwAQBIG
        ACAJAwCQhAEASMIAACRhAACSMAAASRgAgCQMAEASBgAgCQMAkIQBAEjCAAAkYQAAkjAAAEkYAIAkDABA
        EgYAIAkDAJCEAQBIwgAAJGEAAJIwAABJGACAJAwAQBIGACAJAwCQhAEASMIAACRhAACSMAAASRgAgCQM
        AEASBgAgCQMAkIQBAAhzH9/BfGZx8QV4AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgwAAABGCAYAAACg2swsAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAS5JREFUeF7t1sEAACAUQLHoAovp+5VBT2CHOWztMxcA4EcYAIAkDABAEgYAIAkD
        AJCEAQBIwgAAJGEAAJIwAABJGACAJAwAQBIGACAJAwCQhAEASMIAACRhAACSMAAASRgAgCQMAEASBgAg
        CQMAkIQBAEjCAAAkYQAAkjAAAEkYAIAkDABAEgYAIAkDAJCEAQBIwgAAJGEAAJIwAABJGACAJAwAQBIG
        ACAJAwCQhAEASMIAACRhAACSMAAASRgAgCQMAEASBgAgCQMAkIQBAEjCAAAkYQAAkjAAAEkYAIAkDABA
        EgYAIAkDAJCEAQBIwgAAJGEAAJIwAABJGACAJAwAQBIGACAJAwCQhAEASMIAACRhAACSMAAASRgAgCQM
        AEASBgAgCQMAkIQBAAhzH9/BfGZx8QV4AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        J/YAAAAASUVORK5CYII=
</value>
  </data>
</root>